{"ast":null,"code":"var _jsxFileName = \"/Users/noreen/Documents/BootCamp/GroupProjects/noreenProject3/test-blog/client/src/components/ThoughtForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThoughtForm = () => {\n  _s();\n\n  const [thoughtText, setText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addThought, {\n    error\n  }] = useMutation(ADD_THOUGHT, {\n    update(cache, _ref) {\n      let {\n        data: {\n          addThought\n        }\n      } = _ref;\n      // read what's currently in the cache\n      const {\n        thoughts\n      } = cache.readQuery({\n        query: QUERY_THOUGHTS\n      }); // prepend the newest thought to the front of the array\n\n      cache.writeQuery({\n        query: QUERY_THOUGHTS,\n        data: {\n          thoughts: [addThought, ...thoughts]\n        }\n      });\n    }\n\n  });\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      // add thought to database\n      await addThought({\n        variables: {\n          thoughtText\n        }\n      }); // clear form value\n\n      setText('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `m-0 ${characterCount === 280 || error ? 'text-error' : ''}`,\n      children: [\"Character Count: \", characterCount, \"/280\", error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: \"Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex-row justify-center justify-space-between-md align-stretch\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Here's a new thought...\",\n        value: thoughtText,\n        className: \"form-input col-12 col-md-9\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn col-12 col-md-3\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThoughtForm, \"XrYxD22tnNE676rE3nyqO7x+EU0=\", false, function () {\n  return [useMutation];\n});\n\n_c = ThoughtForm;\nexport default ThoughtForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThoughtForm\");","map":{"version":3,"names":["useMutation","ADD_THOUGHT","QUERY_THOUGHTS","React","useState","ThoughtForm","thoughtText","setText","characterCount","setCharacterCount","addThought","error","update","cache","data","thoughts","readQuery","query","writeQuery","handleChange","event","target","value","length","handleFormSubmit","preventDefault","variables","e","console"],"sources":["/Users/noreen/Documents/BootCamp/GroupProjects/noreenProject3/test-blog/client/src/components/ThoughtForm/index.js"],"sourcesContent":["import { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\nimport React, { useState } from 'react';\n\nconst ThoughtForm = () => {\n    const [thoughtText, setText] = useState('');\n    const [characterCount, setCharacterCount] = useState(0);\n    const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n        update(cache, { data: { addThought } }) {\n          // read what's currently in the cache\n          const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n      \n          // prepend the newest thought to the front of the array\n          cache.writeQuery({\n            query: QUERY_THOUGHTS,\n            data: { thoughts: [addThought, ...thoughts] }\n          });\n        }\n      });\n\n    const handleChange = event => {\n        if (event.target.value.length <= 280) {\n          setText(event.target.value);\n          setCharacterCount(event.target.value.length);\n        }\n      };\n\n      const handleFormSubmit = async event => {\n        event.preventDefault();\n      \n        try {\n          // add thought to database\n          await addThought({\n            variables: { thoughtText }\n          });\n      \n          // clear form value\n          setText('');\n          setCharacterCount(0);\n        } catch (e) {\n          console.error(e);\n        }\n      };\n      \n  return (\n    <div>\n        <p className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}>\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n        </p>\n        <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n        >\n        <textarea\n            placeholder=\"Here's a new thought...\"\n            value={thoughtText}\n            className=\"form-input col-12 col-md-9\"\n            onChange={handleChange}\n        ></textarea>\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBH,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,CAAD,CAApD;EACA,MAAM,CAACM,UAAD,EAAa;IAAEC;EAAF,CAAb,IAA0BX,WAAW,CAACC,WAAD,EAAc;IACrDW,MAAM,CAACC,KAAD,QAAkC;MAAA,IAA1B;QAAEC,IAAI,EAAE;UAAEJ;QAAF;MAAR,CAA0B;MACtC;MACA,MAAM;QAAEK;MAAF,IAAeF,KAAK,CAACG,SAAN,CAAgB;QAAEC,KAAK,EAAEf;MAAT,CAAhB,CAArB,CAFsC,CAItC;;MACAW,KAAK,CAACK,UAAN,CAAiB;QACfD,KAAK,EAAEf,cADQ;QAEfY,IAAI,EAAE;UAAEC,QAAQ,EAAE,CAACL,UAAD,EAAa,GAAGK,QAAhB;QAAZ;MAFS,CAAjB;IAID;;EAVoD,CAAd,CAA3C;;EAaA,MAAMI,YAAY,GAAGC,KAAK,IAAI;IAC1B,IAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,IAA6B,GAAjC,EAAsC;MACpChB,OAAO,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;MACAb,iBAAiB,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAApB,CAAjB;IACD;EACF,CALH;;EAOE,MAAMC,gBAAgB,GAAG,MAAMJ,KAAN,IAAe;IACtCA,KAAK,CAACK,cAAN;;IAEA,IAAI;MACF;MACA,MAAMf,UAAU,CAAC;QACfgB,SAAS,EAAE;UAAEpB;QAAF;MADI,CAAD,CAAhB,CAFE,CAMF;;MACAC,OAAO,CAAC,EAAD,CAAP;MACAE,iBAAiB,CAAC,CAAD,CAAjB;IACD,CATD,CASE,OAAOkB,CAAP,EAAU;MACVC,OAAO,CAACjB,KAAR,CAAcgB,CAAd;IACD;EACF,CAfD;;EAiBJ,oBACE;IAAA,wBACI;MAAG,SAAS,EAAG,OAAMnB,cAAc,KAAK,GAAnB,IAA0BG,KAA1B,GAAkC,YAAlC,GAAiD,EAAG,EAAzE;MAAA,gCACkBH,cADlB,UAECG,KAAK,iBAAI;QAAM,SAAS,EAAC,MAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFV;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MACA,SAAS,EAAC,gEADV;MAEA,QAAQ,EAAEa,gBAFV;MAAA,wBAIA;QACI,WAAW,EAAC,yBADhB;QAEI,KAAK,EAAElB,WAFX;QAGI,SAAS,EAAC,4BAHd;QAII,QAAQ,EAAEa;MAJd;QAAA;QAAA;QAAA;MAAA,QAJA,eAUA;QAAQ,SAAS,EAAC,qBAAlB;QAAwC,IAAI,EAAC,QAA7C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVA;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CA9DD;;GAAMd,W;UAG8BL,W;;;KAH9BK,W;AAgEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}